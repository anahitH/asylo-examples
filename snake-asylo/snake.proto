//
// Copyright 2018 Asylo authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto2";

package guide.asylo;

import "asylo/enclave.proto";

message ReturnValue {
  optional int32 eat_gold = 1;
}

message SnakeSegment {
  optional int32 row = 1;
  optional int32 col = 2;
}

message Snake {
  optional uint32 speed = 1;
  enum direction_t {
	LEFT=0; RIGHT = 1; UP = 2; DOWN = 3; LEFT_TURN = 4; RIGHT_TURN = 5; QUIT = 6; NUM_KEYS = 7; }
  optional direction_t direction = 2 [default = LEFT];
  optional int32 len = 3;
  repeated SnakeSegment body = 4;
}

message Screen {
  optional int32 level = 1;
  optional int32 score = 2;
  optional int32 highScore = 3;
  optional int32 gold = 4;
  optional int32 obstacles = 5;
  message cell {
      repeated int32 cell = 1;
  }
  repeated cell grid = 6; 
}

// The EnclaveInput message that is passed to the enclave can be extended with
// a Demo message to communicate a value our enclave knows to expect.
extend .asylo.EnclaveInput {
  optional Snake snake_in = 9001;
  optional Screen screen_in = 9002;
}

// The EnclaveOutput message that is passed out of the enclave can be extended
// with a Demo message to communicate a value our driver knows to expect.
extend .asylo.EnclaveOutput {
  optional Snake snake_out = 9001;
  optional Screen screen_out = 9002;
  optional ReturnValue ret = 9003;
}
